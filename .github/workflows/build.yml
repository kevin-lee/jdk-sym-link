name: Build All

on:
  push:
    branches:
      - "**"

#  pull_request:
#    branches:
#      - main

env:
  GH_JAVA_VERSION: "17"
  GH_JAVA_DISTRIBUTION: "temurin"
  GH_JVM_OPTS: "-Xss64m -Xms1024m -XX:MaxMetaspaceSize=1G -Xmx2G -XX:MaxInlineLevel=18 -XX:+UseJVMCICompiler"
  CLI_SCALA_BINARY_VERSION: "3.4.0"
  GRAALVM_BIN_DIR_NAME: "native-image"

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: "[Push] Build - ${{ github.run_number }}"
        if: github.event_name == 'push'
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "[BEFORE]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
          export CURRENT_BRANCH_NAME="${CURRENT_BRANCH_NAME#refs/heads/}"
          echo " [AFTER]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
          echo "RUN_ID=${RUN_ID}"
          echo "RUN_NUMBER=${RUN_NUMBER}"
          echo "Push #${PUSH_NUMBER}"
          java -version
          .github/workflows/sbt-build-all.sh

      - name: "[PR] Build - PR-#${{ github.event.pull_request.number }} - ${{ github.run_number }}"
        if: github.event_name == 'pull_request'
        env:
          CURRENT_BRANCH_NAME: ${{ github.base_ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "Rull request to the '${CURRENT_BRANCH_NAME}' branch"
          echo "RUN_ID=${RUN_ID}"
          echo "RUN_NUMBER=${RUN_NUMBER}"
          echo "PR #${PR_NUMBER}"
          java -version
          .github/workflows/sbt-build-all.sh

  packager-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13 ]
        run-binary: [ jdk-sym-link-cli ]

    steps:
      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: "JVM Package Build - ${{ github.run_number }}"
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          JVM_OPTS: ${{ env.GH_JVM_OPTS }}
        run: |
          echo "Run]"
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo "JVM_OPTS=${JVM_OPTS}"
          echo "SBT_OPTS=${SBT_OPTS}"
          echo 'sbt clean test universal:packageBin'
          sbt \
            clean \
            test \
            universal:packageBin
          
          cd modules/jdk-sym-link-cli/target/universal
          ls -l ${{ matrix.run-binary }}-*.zip
          unzip ${{ matrix.run-binary }}-*.zip
          rm ${{ matrix.run-binary }}-*.zip
          mv ${{ matrix.run-binary }}-* ${{ matrix.run-binary }}
          cd ${{ matrix.run-binary }}/bin
          ./jdk-sym-link --version

  graalvm-build:
    runs-on: ${{ matrix.os.value }}
    strategy:
      matrix:
        # https://github.com/actions/runner-images?tab=readme-ov-file#available-images
        os:
          - { name: "macOS 12",               value: "macos-12", bin-suffix: "macos-12" }
          - { name: "macOS 13",               value: "macos-13", bin-suffix: "macos-13" }
          - { name: "macOS 14 Apple Silicon", value: "macos-14", bin-suffix: "macos-14-arm64" }
        run-binary: [ jdk-sym-link-cli ]
    steps:

      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: "GraalVM Build - ${{ github.run_number }}"
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          APP_BIN_NAME: ${{ matrix.run-binary }}-${{ matrix.os.bin-suffix }}
        run: |
          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/*.jar

          ls -lGh modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/
          
          mv modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/$APP_BIN_NAME

          sh -c "modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/$APP_BIN_NAME --help"
          sh -c "modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/$APP_BIN_NAME list --help"
          sh -c "modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/$APP_BIN_NAME slink --help"
