name: "[M] GraalVM Native Image - GH Release"

on:
  workflow_dispatch:

env:
  GH_JAVA_VERSION: "17"
  GH_JAVA_DISTRIBUTION: "temurin"
  CLI_SCALA_BINARY_VERSION: "3.4.0"
  GRAALVM_BIN_DIR_NAME: "native-image"

jobs:
  graalvm-gh-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14]
        run-binary: [jdk-sym-link-cli]
    steps:

      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'

      - name: Cache SBT
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: "GraalVM Build - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/*.jar

          ls -lGh modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/
          sh -c "modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --help"

          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            devOopsGitHubReleaseUploadArtifacts
