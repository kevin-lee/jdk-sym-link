name: "[M] GraalVM Native Image - GH Release"

on:
  workflow_dispatch:

env:
  CLI_SCALA_VERSION: "3.0.0-RC3"
  CLI_SCALA_BINARY_VERSION: "3.0.0-RC3"
  GRAALVM_VERSION: "21.0.0.2"
  GRAALVM_JAVA_VERSION: "java11"
  GRAALVM_ARCH: "amd64"
  GRAALVM_BIN_DIR_NAME: "native-image"

jobs:
  graalvm-gh-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        run-binary: [jdk-sym-link-cli]
    steps:

      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "graalvm-ce-java11@"
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: "GraalVM Build for Scala ${{ env.CLI_SCALA_VERSION }} - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          sbt \
            -J-Xmx2048m \
            ++${{ env.CLI_SCALA_VERSION }}! \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/*.jar

          ls -lGh cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --help"

          sbt \
            -J-Xmx2048m \
            devOopsGitHubReleaseUploadArtifacts
