name: Release

on:
  push:
    tags:
      - '*'

env:
  GH_JAVA_VERSION: "17"
  GH_JAVA_DISTRIBUTION: "temurin"
  GH_JVM_OPTS: "-Xss64m -Xms1024m -XX:MaxMetaspaceSize=1G -Xmx2G -XX:MaxInlineLevel=18 -XX:+UseJVMCICompiler"
  CLI_SCALA_BINARY_VERSION: "3"
  GRAALVM_BIN_DIR_NAME: "native-image"

jobs:
  gh-release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: sbt GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        run: |
          echo "Run] sbt GitHub release"
          echo 'sbt -J-Xmx2048m devOopsGitHubRelease'
          sbt \
            -J-Xmx2048m \
            devOopsGitHubRelease


  packager-gh-release:
    needs: gh-release

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: "sbt GitHub Release and Publish tag for ${{ matrix.scala.name }} ${{ matrix.scala.version }} - ${{ github.run_number }}"
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
          JVM_OPTS: ${{ env.GH_JVM_OPTS }}
        run: |
          echo "Run] sbt cli package release"
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo "JVM_OPTS=${JVM_OPTS}"
          echo "SBT_OPTS=${SBT_OPTS}"
          echo 'sbt -v clean test universal:packageBin devOopsGitHubReleaseUploadArtifacts'
          sbt \
            clean \
            test \
            universal:packageBin \
            devOopsGitHubReleaseUploadArtifacts


  graalvm-gh-release:
    needs: gh-release
    runs-on: ${{ matrix.os.value }}
    strategy:
      matrix:
        os:
          - { name: "macOS 12",               value: "macos-12", bin-suffix: "macos-12" }
          - { name: "macOS 13",               value: "macos-13", bin-suffix: "macos-13" }
          - { name: "macOS 14 Apple Silicon", value: "macos-14", bin-suffix: "macos-14-arm64" }
        run-binary: [ jdk-sym-link-cli ]
    steps:

      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: "GraalVM Build - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          APP_BIN_NAME: ${{ matrix.run-binary }}-${{ matrix.os.bin-suffix }}
        run: |
          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/*.jar

          ls -lGh modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/
          sh -c "modules/jdk-sym-link-cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/$APP_BIN_NAME --help"

          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            devOopsGitHubReleaseUploadArtifacts
