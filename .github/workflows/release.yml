name: Release

on:
  push:
    tags:
      - '*'

env:
  GH_JAVA_VERSION: "adopt@1.11"
  CLI_SCALA_BINARY_VERSION: "3.0.0-RC3"
  GRAALVM_BIN_DIR_NAME: "native-image"

jobs:
  github-release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: sbt GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        run: |
          echo "Run] sbt GitHub release"
          echo 'sbt -J-Xmx2048m devOopsGitHubRelease'
          sbt \
            -J-Xmx2048m \
            devOopsGitHubRelease


  graalvm-gh-release:
    needs: github-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        run-binary: [jdk-sym-link-cli]
    steps:

      - uses: actions/checkout@v2.3.4
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: "GraalVM Build - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/*.jar

          ls -lGh cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --help"

          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            devOopsGitHubReleaseUploadArtifacts
